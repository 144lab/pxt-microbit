{
  "bluetooth": "Support for additional Bluetooth services.",
  "bluetooth.onBluetoothConnected": "Register code to run when the micro:bit is connected to over Bluetooth",
  "bluetooth.onBluetoothConnected|block": "on bluetooth connected",
  "bluetooth.onBluetoothConnected|param|body": "Code to run when a Bluetooth connection is established",
  "bluetooth.onBluetoothDisconnected": "Register code to run when a bluetooth connection to the micro:bit is lost",
  "bluetooth.onBluetoothDisconnected|block": "on bluetooth disconnected",
  "bluetooth.onBluetoothDisconnected|param|body": "Code to run when a Bluetooth connection is lost",
  "bluetooth.startAccelerometerService": "Starts the Bluetooth accelerometer service",
  "bluetooth.startAccelerometerService|block": "bluetooth accelerometer service",
  "bluetooth.startButtonService": "Starts the Bluetooth button service",
  "bluetooth.startButtonService|block": "bluetooth button service",
  "bluetooth.startIOPinService": "Starts the Bluetooth IO pin service.",
  "bluetooth.startIOPinService|block": "bluetooth io pin service",
  "bluetooth.startLEDService": "Starts the Bluetooth LED service",
  "bluetooth.startLEDService|block": "bluetooth led service",
  "bluetooth.startMagnetometerService": "Starts the Bluetooth magnetometer service",
  "bluetooth.startMagnetometerService|block": "bluetooth magnetometer service",
  "bluetooth.startTemperatureService": "Starts the Bluetooth temperature service",
  "bluetooth.startTemperatureService|block": "bluetooth temperature service",
  "bluetooth.uartRead": "Reads from the Bluetooth UART service buffer, returning its contents when the specified delimiter character is encountered.",
  "bluetooth.uartRead|block": "bluetooth uart read %del=bluetooth_uart_delimiter_conv",
  "bluetooth.uartWrite": "Writes to the Bluetooth UART service buffer. From there the data is transmitted over Bluetooth to a connected device.",
  "bluetooth.uartWrite|block": "bluetooth uart write %data",
  "bluetooth|block": "bluetooth"
}